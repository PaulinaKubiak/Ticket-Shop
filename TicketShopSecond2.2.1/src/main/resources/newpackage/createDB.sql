create table KONTO (
ID BIGINT PRIMARY KEY, 
KONTO VARCHAR(30) NOT NULL,
AKTYWNE SMALLINT NOT NULL,
AUTORYZOWANE SMALLINT NOT NULL,
DATA_MODYFIKACJI DATE, 
DATA_UTWORZENIA TIMESTAMP NOT NULL,
EMAIL VARCHAR(255) NOT NULL,
HASLO VARCHAR(255) NOT NULL, 
IMIE VARCHAR(255) NOT NULL,
LOGIN VARCHAR(255) NOT NULL, CONSTRAINT UNIQUE_LOGIN unique (LOGIN),  
NAZWISKO VARCHAR(255) NOT NULL, 
ODPOWIEDZKONTROLNA VARCHAR(255), 
PYTANIEKONTROLNE VARCHAR(255), 
WERSJA INTEGER, 
MODYFIKOWANEPRZEZ BIGINT REFERENCES KONTO(ID)); 

create table KONCERT (
ID BIGINT PRIMARY KEY, 
CENA INTEGER NOT NULL, 
DATA TIMESTAMP NOT NULL, 
DATA_MODYFIKACJI TIMESTAMP,
DATA_UTWORZENIA TIMESTAMP NOT NULL, 
MIEJSCE VARCHAR(255) NOT NULL, 
PULABILETOW INTEGER, 
WERSJA INTEGER NOT NULL, 
WYKONAWCA VARCHAR(255) NOT NULL, 
MODYFIKOWANEPRZEZ BIGINT REFERENCES KONTO(ID), 
WPROWADZKONCERT BIGINT REFERENCES KONTO(ID));

create table BILET (
ID BIGINT PRIMARY KEY, 
DATA_MODYFIKACJI DATE, 
DATA_UTWORZENIA TIMESTAMP NOT NULL, 
WERSJA INTEGER, 
KLIENTID BIGINT REFERENCES KONTO(ID), 
IDKONCERTU BIGINT REFERENCES KONCERT(ID)); 

create table TABLEGENERATOR (
ID VARCHAR(50) PRIMARY KEY,
VALUE DECIMAL(15,0)
);

create table BILETGENERATOR (
ID VARCHAR(50) PRIMARY KEY,
VALUE DECIMAL(15,0)
);

CREATE VIEW AUTORYZACJA_VIEW AS 
SELECT LOGIN, HASLO, KONTO FROM KONTO WHERE aktywne>0 AND AUTORYZOWANE>0 AND NOT KONTO  = 'nowe konto';
